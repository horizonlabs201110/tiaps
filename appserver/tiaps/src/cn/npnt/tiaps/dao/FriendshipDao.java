package cn.npnt.tiaps.dao;import java.util.List;import java.util.Map;import cn.npnt.tiaps.base.dao.GenericDao;import cn.npnt.tiaps.base.vo.QueryParamVO;import cn.npnt.tiaps.entity.Friendship;import cn.npnt.tiaps.entity.User;public interface FriendshipDao extends GenericDao<Friendship, Long> {	/**	 * @company 新和新拓（北京）科技有限公司	 * @author Recoba Gan	 * @createDate 2011 2011-12-26 下午11:43:40	 * @description 判断user2是否是在关注user1，即:user2是否是user1的粉丝	 */	boolean isFollower(long user1,long user2);	/**	 * @company 新和新拓（北京）科技有限公司	 * @author Recoba Gan	 * @createDate 2011 2011-12-26 下午11:43:40	 * @description 判断user1是否是在关注user2，即：user1是否是user2的粉丝	 */	boolean isFollowing(long user1,long user2);	/**	 * 	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 3:49:35 PM Dec 28, 2011	 * @description 获取某个用户的粉丝列表	 * @param userParamparam对象必须包含 (accessId、id、nickname、email其中任何一项即可）	 * @param queryParam 查询条件参数	 */	List<Friendship> getAllFollower(User userParam, QueryParamVO queryParam);	/**	 * 	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 3:49:35 PM Dec 28, 2011	 * @description 分页获取某个用户的粉丝列表	 * @param userParamparam对象必须包含 (accessId、id、nickname、email其中任何一项即可）	 * @param queryParam 查询条件参数	 */	List<Friendship> getFollower(User userParam, QueryParamVO queryParam);	/**	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 3:49:35 PM Dec 28, 2011	 * @description 获取某个用户关注的所有人	 * @param userParamparam对象必须包含 (accessId、id、nickname、email其中任何一项即可）	 * @param queryParam 查询条件参数	 */	List<Friendship> getAllFollowing(User userParam, QueryParamVO queryParam);	/**	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 3:49:35 PM Dec 28, 2011	 * @description 分页获取某个用户关注的所有人	 * @param userParamparam对象必须包含 (accessId、id、nickname、email其中任何一项即可）	 * @param queryParam 查询条件参数	 */	List<Friendship> getFollowing(User userParam, QueryParamVO queryParam);	/**	 * 	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 10:54:33 PM Dec 28, 2011	 * @description 获取某用户的粉丝数	 * @param userParam 	 */	Long getfollowerCount(User userParam);			/**	 * 	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 11:08:44 PM Dec 28, 2011	 * @description 获取某用户关注的人数	 * @param	 */	Long getfollowingCount(User userParam);						/**	 * 	 * @company 新和新拓（北京）科技有限公司	 * @author newnewmac	 * @createDate 3:49:35 PM Dec 28, 2011	 * @description 根据查询条件，来获取一条唯一的关注记录	 * @param user1 userByUserId	 * @param user2 userByFollowingId	 */	Friendship getFriendship(long user1,long user2);		/**	 * @company 新和新拓（北京）科技有限公司	 * @author Recoba Gan	 * @createDate 2012 2012-1-12 下午3:19:13	 * @description 查询用户在一段时间内被关注了多少次	 */	Integer findUserFollowersNumByDate(String beginDate , String endDate , Long userId);	/**	 * @company 新和新拓（北京）科技有限公司	 * @author Recoba Gan	 * @createDate 2012 2012-4-5 下午4:55:42	 * @description 清楚某个用户的所有粉丝提醒，将其修改为已阅读状态	 * 为了接口的安全性 param 其中必须包括Friendship对象id或者followingId。	 */	void doInformed(Map<String,Object> param);}