package cn.npnt.tiaps.service.impl;import java.util.Calendar;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import cn.npnt.tiaps.base.vo.QueryParamVO;import cn.npnt.tiaps.dao.FriendshipDao;import cn.npnt.tiaps.dao.LookDao;import cn.npnt.tiaps.dao.TimelineDao;import cn.npnt.tiaps.entity.Friendship;import cn.npnt.tiaps.entity.Look;import cn.npnt.tiaps.entity.Timeline;import cn.npnt.tiaps.entity.TimelineId;import cn.npnt.tiaps.entity.User;import cn.npnt.tiaps.service.FriendshipService;import cn.npnt.tiaps.util.DateUtil;public class FriendshipServiceImpl implements FriendshipService{	private Logger logger = Logger.getLogger(FriendshipServiceImpl.class);	private FriendshipDao friendshipDao;	private LookDao lookDao;	private TimelineDao timelineDao;	@Autowired	public void setFriendshipDao(FriendshipDao friendshipDao) {		this.friendshipDao = friendshipDao;	}	@Autowired	public void setLookDao(LookDao lookDao){		this.lookDao =  lookDao;	}	@Autowired	public void setTimelineDao(TimelineDao timelineDao){		this.timelineDao = timelineDao;	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#isFollower(long, long)	 */	@Override	public boolean isFollower(long user1, long user2) {		// TODO Auto-generated method stub		return friendshipDao.isFollower(user1, user2);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#isFollowing(long, long)	 */	@Override	public boolean isFollowing(long user1, long user2) {		// TODO Auto-generated method stub		return friendshipDao.isFollowing(user1, user2);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#getAllFollower(cn.npnt.tiaps.entity.User, cn.npnt.tiaps.base.vo.QueryParamVO)	 */	@Override	public List<Friendship> getAllFollower(User userParam, QueryParamVO queryParam) {		// TODO Auto-generated method stub		return friendshipDao.getAllFollower(userParam, queryParam);	}	@Override	public List<Friendship> getAllFollowing(User userParam, QueryParamVO queryParam) {		// TODO Auto-generated method stub		return friendshipDao.getAllFollowing(userParam, queryParam);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#follow(long, long)	 */	@Override	public Friendship follow(long user1, long user2) {		// TODO Auto-generated method stub		Date current = new Date();		Friendship fs = new Friendship();		User userEntity1 = new User();		userEntity1.setId(user1);		fs.setUserByUserId(userEntity1);				User userEntity2 = new User();		userEntity2.setId(user2);		fs.setUserByFollowingId(userEntity2);		fs.setCreateTime(current);		fs.setInformed(false);		fs.setVersion(0);				long id  = friendshipDao.insert(fs);		fs.setId(id);		//维护timeline		int limit = 500;//最多数量		String sinceDate = null;//从什么时候开始的		Calendar calendar = Calendar.getInstance();		calendar.setTime(current);		calendar.add(Calendar.DATE, -7);		sinceDate = DateUtil.getFormatedDateString(calendar.getTime(), DateUtil.format_YYYY_MM_DD_HH_MM_SS);		Map<String,Object> param = new HashMap<String, Object>();		param.put("sinceDate", sinceDate);		param.put("limit", limit);		List<Long> idList = lookDao.findUserLookIds(param, user2);		if(idList != null && idList.size() > 0){			Look timelineLook = new Look();			TimelineId timelineId = new TimelineId();			Timeline timeline = null;			for(Long i : idList){				timelineDao.insert(user1,i);			}		}else{			logger.info(user2 + " 一周内发表的look数量为0");		}		return fs;	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#unfollow(long, long)	 */	@Override	public void unfollow(long user1, long user2) {		Friendship fs = friendshipDao.getFriendship(user1, user2);		friendshipDao.delete(fs);		timelineDao.removeFollowingTimeline(user1, user2);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#getFollower(cn.npnt.tiaps.entity.User, cn.npnt.tiaps.base.vo.QueryParamVO)	 */	@Override	public List<Friendship> getFollower(User userParam, QueryParamVO queryParam) {		// TODO Auto-generated method stub		return friendshipDao.getFollower(userParam, queryParam);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#getFollowing(cn.npnt.tiaps.entity.User, cn.npnt.tiaps.base.vo.QueryParamVO)	 */	@Override	public List<Friendship> getFollowing(User userParam, QueryParamVO queryParam) {		// TODO Auto-generated method stub		return friendshipDao.getFollowing(userParam, queryParam);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#getfollowerCount(cn.npnt.tiaps.entity.User)	 */	@Override	public Long getfollowerCount(User userParam) {		// TODO Auto-generated method stub		return friendshipDao.getfollowerCount(userParam);	}	/* (non-Javadoc)	 * @see cn.npnt.tiaps.service.FriendshipService#getfollowingCount(cn.npnt.tiaps.entity.User)	 */	@Override	public Long getfollowingCount(User userParam) {		// TODO Auto-generated method stub		return friendshipDao.getfollowingCount(userParam);	}	@Override	public void doInformed(Map<String, Object> param) {		friendshipDao.doInformed(param);	}}